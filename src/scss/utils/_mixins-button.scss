/*------------------------------------*\
  > Button Mixin
\*------------------------------------*/


// Button Plain
// Button with plain background color
// eg. button--primary
@mixin button-plain($color, $theme: "bright") {
    position: relative;
    padding: $size-9 $size-20; // We substract 1px to padding (regarding the fygma doc) to take in account the 1px border
    background-color: $color;
    color: $white;
    border: 1px solid $color;
    border-radius: $button-border-radius;
    font-family: $font-body;
    font-size: $size-16;
    font-weight: $font-weight-title;
    transition: background-color .1s $easeInOutCubic, color .2s $easeInOutCubic;

    // Hover, focus, active interactions
    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        @if $theme == "masquerade" {
            background-color: $functional-warning-l;
            border-color: $functional-warning-l;
        }
        @else {
            background-color: $rb-primary-blue-l;
            border-color: $rb-primary-blue-l;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button--active {
        outline: none;
        border-radius: $button-border-radius;

        @if $theme == "dark" {
            border-color: #fff;
            box-shadow: 0 0 0 1px #fff;
        }
        @else {
            border-color: $rb-primary-blue-dd;
            box-shadow: 0 0 0 1px $rb-primary-blue-dd;
        }

        &:only-child {
            margin: 0;
        }
    }

    // Disabled state
    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        background-color: $grey-95;
        border-color: $grey-95;
    }

    // Icons
    .button__icon {
        display: inline-block;
        line-height: 100%;
        vertical-align: middle;
        margin-left: -$size-4;
        margin-right: $size-2;
        fill: $rb-primary-blue;
        width: $size-18;
        height: $size-18;
    }
}

// Button Outline Colored
// Button with transparent background, a colored border, and a colored label on dark mode
// eg. button--secondary
@mixin button-outline-colored($color, $theme: "bright") {
    position: relative;
    padding: $size-9 $size-20; // We substract 1px to padding (regarding the fygma doc) to take in account the 1px border
    background-color: transparent;
    border: 1px solid $color;
    border-radius: $button-border-radius;
    font-family: $font-body;
    font-size: $size-16;
    font-weight: $font-weight-title;
    transition: background-color .1s $easeInOutCubic, color .2s $easeInOutCubic;

    @if $theme == "dark" {
        color: $color;
    }
    @else {
        color: $rb-primary-blue-dd;
    }

    // Icons
    .button__icon {
        display: inline-block;
        line-height: 100%;
        vertical-align: middle;
        margin-left: -$size-4;
        margin-right: $size-2;
        width: $size-18;
        height: $size-18;

        @if $theme == "dark" {
            fill: $color;
        }
        @else {
            fill: $rb-primary-blue-dd;
        }

        &:only-child {
            margin: 0;
        }
    }

    // Hover, focus, active interactions
    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        border-color: $color;

        @if $theme == "masquerade" {
            background-color: $functional-warning-lll;
        }
        @else if $theme == "dark" {
            background-color: rgba(101, 215, 141, .3); // $primary-green
        }
        @else {
            background-color: $rb-primary-blue-lll;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button--active {
        outline: none;
        box-shadow: none;

        @if $theme == "dark" {
            border-color: #fff;
            box-shadow: 0 0 0 1px #fff;
        }
        @else {
            border-color: $rb-primary-blue-dd;
            box-shadow: 0 0 0 1px $rb-primary-blue-dd;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon,
    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon,
    &.button--active .button__icon {
        @if $theme == "dark" {
            fill: #fff;
        }
        @else {
            fill: $rb-primary-blue-dd;
        }
    }

    // Disabled state
    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        border-color: $grey-95;
    }

    &:disabled .button__icon,
    &[disabled="disabled"] .button__icon,
    &[aria-disabled="true"] .button__icon,
    &.button-disabled .button__icon {
        fill: $grey-65;
    }
}

// Button Outline White
// Button with transparent background, a colored border, and white label on dark mode
// eg. button--tertiary
@mixin button-outline-white($color, $theme: "bright") {
    position: relative;
    padding: $size-9 $size-20; // We substract 1px to padding (regarding the fygma doc) to take in account the 1px border
    background-color: transparent;
    border-radius: $button-border-radius;
    font-family: $font-body;
    font-size: $size-16;
    font-weight: $font-weight-title;
    transition: background-color .1s $easeInOutCubic, color .2s $easeInOutCubic;

    @if $theme == "dark" {
        color: #fff;
        border: 1px solid #fff;
    }
    @else if $theme == "masquerade" {
        color: $color;
        border: 1px solid $functional-warning-d;
    }
    @else {
        color: $color;
        border: 1px solid $rb-primary-blue-l;
    }

    // Icons
    .button__icon {
        display: inline-block;
        line-height: 100%;
        vertical-align: middle;
        margin-left: -$size-4;
        margin-right: $size-2;
        width: $size-18;
        height: $size-18;

        @if $theme == "dark" {
            fill: #fff;
        }
        @else {
            fill: $color;
        }

        &:only-child {
            margin: 0;
        }
    }

    // Hover, focus, active interactions
    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        outline: none;

        @if $theme == "masquerade" {
            background-color: $functional-warning-lll;
        }
        @else if $theme == "dark" {
            background-color: rgba(63, 109, 167, .35); // $primary-blue
        }
        @else {
            background-color: $rb-primary-blue-lll;
        }
    }

    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon {
        @if $theme == "dark" {
            fill: #fff;
        }
        @else {
            fill: $color;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button--active {
        outline: none;
        box-shadow: none;

        @if $theme == "dark" {
            border-color: #fff;
            box-shadow: 0 0 0 1px #fff;
        }
        @else {
            border-color: $rb-primary-blue-dd;
            box-shadow: 0 0 0 1px $rb-primary-blue-dd;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon,
    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon,
    &.button--active .button__icon {
        @if $theme == "dark" {
            fill: #fff;
        }
        @else {
            fill: $color;
        }
    }

    // Disabled state
    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        border-color: $grey-95;
    }

    &:disabled .button__icon,
    &[disabled="disabled"] .button__icon,
    &[aria-disabled="true"] .button__icon,
    &.button-disabled .button__icon {
        fill: $grey-65;
    }
}

// Button Text
// Button with transparent background and no border
// eg. button--text
@mixin button-text($color, $theme:"bright") {
    position: relative;
    padding: 0;
    background-color: transparent;
    border: 0;
    font-size: $size-16;
    font-family: $font-body;
    font-weight: $font-weight-title;

    @if $theme == "dark" {
        color: #fff;
    }
    @else {
        color: $color;
    }

    // Icons
    .button__icon {
        width: $size-18;
        height: $size-18;

        @if $theme == "dark" {
            fill: #fff;
        }
        @else {
            fill: $color;
        }

        &:only-child {
            margin: 0;
        }
    }

    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"])  {
        @if $theme == "dark" {
            color: $primary-blue-ll;
        }
        @else {
            color: $primary-blue-d;
        }
    }

    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon {
        @if $theme == "dark" {
            fill: $primary-blue-ll;
        }
        @else {
            fill: $primary-blue-d;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button--active {
        outline: none;
        @if $theme == "dark" {
            box-shadow: 0 0 $size-2 $primary-blue-ll, inset 0 0 $size-2 $primary-blue-ll;
        }
        @else {
            box-shadow: 0 0 $size-2 $color, inset 0 0 $size-2 $color;
        }
    }

    .button__label {
        text-decoration: underline;
        margin-left: $size-4;
        margin-right: $size-4;
        text-align: left;
    }

    &.button--size-small {
        font-size: $size-14;
        padding-top: 0;
        padding-bottom: 0;
    }

    // Disabled state
    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        border-color: $grey-95;
    }

    &:disabled .button__icon,
    &[disabled="disabled"] .button__icon,
    &[aria-disabled="true"] .button__icon,
    &.button-disabled .button__icon {
        fill: $grey-65;
    }
}
// Button Transparent
// Button without any "style"
// e.g. Card Bookmark classified button
@mixin button-transparent($outline: "default") {
    background: transparent;
    border: 0;
    padding: 0;
    cursor: pointer;

    @if $outline != "default" {
        &:focus {
            outline: $outline;
        }
    }

    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        cursor: not-allowed;
    }
}
