.switch__input {
    position: absolute;
    z-index: 1;
    left: 0;
    right: 0;

    width: 100%;
    height: 100%;

    cursor: pointer;
    opacity: 0;


    // indeterminate
    &:indeterminate {
        + .switch__checkbox {
            --checked: 0;
        }
    }

    /**
     * checked
     *
     * Note that `:not(:indeterminate)` is needed here because Firefox (99)
     * meet the `:checked` condition when the checkbox is indeterminate.
     * Other browsers donâ€™t.
     */
    &:checked:not(:indeterminate) {
        + .switch__checkbox {
            --checked: 1;

            --switch-bg: #{$primary-blue};
            --switch-check-color: #fff;
        }

        &:disabled,
        &[aria-disabled=true] {
            + .switch__checkbox {
                --switch-bg: #{$grey-65};
            }
        }
    }

    // disabled
    &:disabled,
    &[aria-disabled=true] {
        cursor: not-allowed;

        + .switch__checkbox {
            --switch-bg: #{$grey-95};
            --switch-borders: #{$grey-55};
            --switch-sliding-border: #{$grey-55};
            color: $grey-55;
        }
    }
}

// Box around the switch
.switch__checkbox {
    position: relative;

    width: var(--switch-w);
    height: var(--switch-h);

    // Center (horizontally and vertically) the circle, all icons and the dots.
    display: inline-flex;
    justify-content: center;
    align-items: center;

    background-color: var(--switch-bg);
    border: $size-1 solid var(--switch-borders);
    border-radius: $size-20;
    color: $primary-blue-dd;

    transition: background-color var(--switch-motion) $easeInOutCubic;

    // Outline, shown on focus
    &::before {
        content: '';

        position: absolute;
        inset: -$size-2;

        border: $size-2 solid;
        border-radius: $size-20;
        opacity: var(--switch-focus-outline);
    }

    // Sliding circle, can move and become invisible
    &::after {
        content: '';

        width: calc(var(--switch-toggle-diameter));
        height: calc(var(--switch-toggle-diameter));

        background-color: $color-background;
        border-radius: $size-20;
        border: $size-1 solid var(--switch-sliding-border, $primary-blue);

        opacity: var(--switch-toggle-visible, 1);
        transform:
            // checked: translate to right
            // indeterminate: stay in center
            // unchecked: translate to left
            translateX(calc(var(--checked) * var(--switch-toggle-translate-x)))

            // scale to 0 when dots are visible
            scale(var(--switch-toggle-visible, 1));

        transition: var(--switch-motion) $easeInOutCubic;
        transition-property: opacity, transform;
    }
}
