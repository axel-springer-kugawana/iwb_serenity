/*------------------------------------*\
  > Button
  All style & mixins for generic buttons
  \*------------------------------------*/

.button {
    display: inline-block;
    border: 0;
    text-decoration: none;
    text-align: center;
    cursor: pointer;

    &:hover,
    &:focus,
    &:active {
        text-decoration: none;
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        outline: 2px solid $primary-blue-d;
    }
}

// Specific for icon and label
.button__label,
.button__icon {
    display: inline-block;
    vertical-align: middle;
}

// IE 11 FIX
// On IE 11 :active state make content of the button shifting of some pixel
// These bunch of rules should cancel this behaviour
.button:active .button__label,
.button:active .button__icon {
    position: relative;
    top: 0;
    left: 0;
}

// Disable state
%button-disable,
.button:disabled,
.button[aria-disabled="true"],
.button.button-disabled {
    outline: none;
    cursor: not-allowed;
    pointer-events: none;
    color: $grey-65;

    @include media-query("desktop") {
        cursor: not-allowed;
        pointer-events: auto;
    }
}

// Button Mixin
// ---------------------

// Button Plain
// Button with plain background color
// eg. button--primary
@mixin button-plain($color, $theme: "bright") {
    position: relative;
    padding: $size-6 $size-12; // We substract 2px to padding (regarding the frontify doc) to take in account the 2px border
    background-color: $color;
    color: $primary-blue-dd;
    border: 2px solid $color;
    border-radius: $buttonBorderRadius;
    text-transform: uppercase;
    font-family: $font-title;
    font-size: $size-16;
    font-weight: $font-weight-title;
    transition: background-color .1s $easeInOutCubic, color .2s $easeInOutCubic;

    // Hover, focus, active interactions
    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        color: #fff;
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button-disabled:focus:not([disabled="disabled"]):not([aria-disabled="true"]) {
        outline: none;

        @if $theme == "dark" {
            border-color: #fff;
        }
        @else {
            border-color: $primary-blue-dd;
        }
    }

    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        border-color: color-ddd($color);
        background-color: color-ddd($color);
    }

    // Disabled state
    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        background-color: $grey-95;
        border-color: $grey-95;
    }

    // Icons
    .button__icon {
        display: inline-block;
        line-height: 100%;
        vertical-align: middle;
        margin-right: 2px;
        fill: $color;
    }
}

// Button Outline
// Button with transparent background and a colored border
// eg. button--secondary
@mixin button-outline($color, $theme: "bright") {
    position: relative;
    padding: $size-6 $size-12; // We substract 2px to padding (regarding the frontify doc) to take in account the 2px border
    background-color: transparent;
    border: 2px solid $color;
    border-radius: $buttonBorderRadius;
    text-transform: uppercase;
    font-family: $font-title;
    font-size: $size-16;
    font-weight: $font-weight-title;
    transition: background-color .1s $easeInOutCubic, color .2s $easeInOutCubic;

    @if $theme == "dark" {
        color: $color;
    }
    @else {
        color: $primary-blue-dd;
    }

    // Icons
    .button__icon {
        display: inline-block;
        line-height: 100%;
        vertical-align: middle;
        // margin-top: 1px; // Margin top magic number for visualy "aligned" icon
        margin-right: 2px;
        fill: $color;
    }

    // Hover, focus, active interactions
    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        color: #fff;
        background-color: $color;
    }

    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon {
        fill: #fff;
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button--active {

        @if $theme == "dark" {
            background-color: transparent;
            color: #fff;
        }
        @else {
            background-color: $color;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]),
    &.button-disabled:focus:not([aria-disabled="true"]),
    &.button--active {
        outline: none;

        @if $theme == "dark" {
            border-color: #fff;
        }
        @else {
            border-color: $primary-blue-dd;
        }
    }

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon,
    &.button--active .button__icon {
        @if $theme == "dark" {
            fill: #fff;
        }
        @else {
            fill: $primary-blue-dd;
        }
    }

    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        border-color: color-ddd($color);
        background-color: transparent;

        @if $theme == "dark" {
            color: color-ddd($color);
        }
        @else {
            color: $primary-blue-dd;
        }
    }

    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon {
        fill: color-ddd($color);
    }

    // Disabled state
    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        border-color: $grey-95;
    }

    &:disabled .button__icon,
    &[disabled="disabled"] .button__icon,
    &[aria-disabled="true"] .button__icon,
    &.button-disabled .button__icon {
        fill: $grey-65;
    }
}

// Button Text
// Button with transparent background and no border
// eg. button--text
@mixin button-text($color) {
    position: relative;
    padding: 0;
    background-color: transparent;
    color: $primary-blue-dd;
    border: 0;
    font-size: $size-12;
    font-family: $font-title;
    font-weight: $font-weight-title;

    &:hover:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        box-shadow: 0 -1px 0 0 $color inset;
        color: $primary-blue-dd;
    }

    // 2019-11-28 : Used anymore ?
    /*&:focus:not([disabled="disabled"]):not([aria-disabled="true"]) {
        box-shadow: 0 -1px 0 0 $primary-ddd inset;
    }

    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        box-shadow: 0 -1px 0 0 color-ddd($color) inset;
    }*/

    &:focus:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) {
        outline: none;
    }

    &:disabled,
    &[disabled="disabled"],
    &:disabled .button__icon,
    &[disabled="disabled"] .button__icon,
    &[aria-disabled="true"] .button__icon,
    &.button-disabled .button__icon {
        color: $grey-65;
    }

    // Icons
    .button__icon {
        fill: $color;
        width: $size-12;
        height: $size-12;
        margin-left: $size-4;
    }

    .button__icon--left {
        margin-right: $size-4;
        margin-left: 0;
    }

    &:active:not([disabled="disabled"]):not(.button-disabled):not([aria-disabled="true"]) .button__icon {
        fill: color-ddd($color);
    }

    &:disabled .button__icon,
    &[disabled="disabled"] .button__icon,
    &[aria-disabled="true"] .button__icon,
    &.button-disabled .button__icon {
        fill: $grey-65;
    }
}

// Button Transparent
// Button without any "style"
// e.g. Card Bookmark classified button
@mixin button-transparent($outline: "default") {
    background: transparent;
    border: 0;
    padding: 0;
    cursor: pointer;

    @if $outline != "default" {
        &:focus {
            outline: $outline;
        }
    }

    &:disabled,
    &[disabled="disabled"],
    &[aria-disabled="true"],
    &.button-disabled {
        cursor: not-allowed;
    }
}

// Button definition
// ---------------------

// Button Primary
%button--primary,
.button--primary {
    @include button-plain($green);
}

%button--primary--dark,
.button--primary--dark {
    @include button-plain($green, "dark");
}

// Button Secondary
%button--secondary,
.button--secondary {
    @include button-outline($green);
}

%button--secondary--dark,
.button--secondary--dark {
    @include button-outline($green, "dark");
}

// Button Text
%button--text,
.button--text {
    @include button-text($green);
}

// Button Bright
%button--bright,
.button--bright {
    @include button-plain($bright);
}

// Button Square
%button--square,
.button--square {
    border-radius: 0;
}

// Button Transparent
%button--transparent,
.button--transparent {
    @include button-transparent();
}

// Positions
// ---------------------
// Button on the right
.button--right {
    float: right;
}

// Sizes
// ---------------------

// Size Input
// Size use in input field
// eg input-search
%button--size-input,
.button--size-input {
    padding: 0 $size-10;
    height: 100%;
    line-height: 100%;
    font-size: $size-24;
}

// Size Small
// Smaller version of the button
// eg. Button use in PP Header
%button--size-small,
.button--size-small {
    font-size: $size-12;
    padding: $size-6 $size-10;
}

// Button Short Label
// Specific style for button with short label (use to avoid button rendering like a circle)
// eg. Button use in advance search location search
// ---------------------
.button--short-label {
    min-width: 50px;
}